spring:
    application:
        name: gateway-server
    security:
        oauth2:
            resourceserver:
                jwt:
                    issuer-uri: http://localhost:8880/auth/realms/spring-cloud-microservices-realm
    redis:
        password: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    cloud:
        gateway:
            discovery:
                locator:
                    enabled: true
                    lower-case-service-id: true
#        loadbalancer:
#            ribbon:
#                enabled: false
            globalcors:
                cors-configurations:
                    '[/**]':
                        allowedOrigins: "*"
                        allowedMethods: "*"
                        allowedHeaders: "*"
            routes:
                -   id: employee-service
                    uri: lb://employee-service
                    predicates:
                        - Path=/employee/**
                    filters:
                        - RewritePath=/employee/(?<path>.*), /$\{path}
                        -   name: RequestRateLimiter
                            args:
                                redis-rate-limiter.replenishRate: 10
                                redis-rate-limiter.burstCapacity: 20
                                redis-rate-limiter.requestedTokens: 1
                -   id: department-service
                    uri: lb://department-service
                    predicates:
                        - Path=/department/**
                    filters:
                        - RewritePath=/department/(?<path>.*), /$\{path}
                        -   name: RequestRateLimiter
                            args:
                                redis-rate-limiter.replenishRate: 10
                                redis-rate-limiter.burstCapacity: 20
                                redis-rate-limiter.requestedTokens: 1
                -   id: organization-service
                    uri: lb://organization-service
                    predicates:
                        - Path=/organization/**
                    filters:
                        - RewritePath=/organization/(?<path>.*), /$\{path}
                        -   name: RequestRateLimiter
                            args:
                                redis-rate-limiter.replenishRate: 10
                                redis-rate-limiter.burstCapacity: 20
                                redis-rate-limiter.requestedTokens: 1

                -   id: openapi
                    uri: http://localhost:${server.port}
                    predicates:
                        - Path=/v3/api-docs/**
                    filters:
                        - RewritePath=/v3/api-docs/(?<path>.*), /$\{path}/v3/api-docs

        bus:
            id: ${spring.application.name}:${spring.profiles.active}:${random.uuid}
            enabled: true
            refresh:
                enabled: true
            env:
                enabled: true

    # Zipkin info
    zipkin:
        base-url: http://localhost:9411/
    sleuth:
        sampler:
            probability: 1

    logstash:
        server: ${LOGSTASH_SERVER:localhost}
        port: ${LOGSTASH_PORT:5000}

    rabbitmq:
        host: ${RABBITMQ_HOST:localhost}
        port: ${RABBITMQ_PORT:5672}

management:
    endpoint:
        hystrix:
            stream:
                enabled: false
        health:
            show-details: always
    endpoints:
        web:
            cors:
                allowed-origins: "*"
            exposure:
                include: "*"
                #                include: "hystrix.stream"
                exclude: threaddump, heapdump

springdoc:
    swagger-ui:
        urls:
            -   name: employee
                url: /v3/api-docs/employee
            -   name: department
                url: /v3/api-docs/department
            -   name: organization
                url: /v3/api-docs/organization

eureka:
    client:
        service-url:
            defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}

ribbon:
    eureka:
        enabled: true

server:
    port: 8080
