version: '3.7'

services:
    zipkin:
        image: openzipkin/zipkin:latest
        container_name: zipkin
        hostname: zipkin
        restart: unless-stopped
        stdin_open: true
        tty: true
        ports:
            - "9411:9411"
    postgreskc:
        image: postgres:alpine
        container_name: postgreskc
        hostname: postgreskc
        restart: unless-stopped
        stdin_open: true
        tty: true
#        ports:
#            - "5432:5432"
        environment:
            POSTGRES_USER: keycloak
            POSTGRES_PASSWORD: password
            POSTGRES_DB: keycloak
            POSTGRES_HOST: postgres
        volumes:
            - postgreskc_data:/var/lib/postgresql/data
    keycloak:
        image: quay.io/keycloak/keycloak:legacy
        container_name: keycloak
        hostname: keycloak
        restart: unless-stopped
        stdin_open: true
        tty: true
        environment:
            DB_VENDOR: postgres
            DB_ADDR: postgreskc
            DB_PORT: 5432
            DB_DATABASE: keycloak
            DB_USER: keycloak
            DB_PASSWORD: password
            KEYCLOAK_USER: admin
            KEYCLOAK_PASSWORD: password
            # KEYCLOAK_LOGLEVEL: DEBUG
        depends_on:
            - postgreskc
        labels:
            traefik.enable: true
            traefik.port: 8080
            traefik.protocol: http
            traefik.frontend.rule: Host:localhost
            traefik.frontend.passHostHeader: true
            # traefik.backend.loadbalancer.stickiness: true
    traefik:
        image: library/traefik:alpine
        container_name: traefik
        hostname: traefik
        restart: unless-stopped
        stdin_open: true
        tty: true
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: >
            --logLevel=ERROR
            --api.dashboard
            --docker
            --entrypoints="Name:http Address::80"
            --defaultentrypoints="http"
        ports:
            - "8880:80"
            - "8980:8080"
#    gogsdb:
#        image: tareqmy/postgres:latest
#        container_name: gogsdb
#        hostname: gogsdb
#        restart: unless-stopped
#        stdin_open: true
#        tty: true
#        environment:
#            - "POSTGRES_USER=gogs"
#            - "POSTGRES_PASSWORD=gogs"
#            - "POSTGRES_DB=gogs"
#        volumes:
#            - "gogsdb-data:/var/lib/postgresql/data"
#    gogs:
#        image: gogs/gogs:latest
#        container_name: gogs
#        hostname: gogs
#        restart: unless-stopped
#        stdin_open: true
#        tty: true
#        ports:
#            - "10022:22"
#            - "3000:3000"
#        links:
#            - gogsdb
#        environment:
#            - "RUN_CROND=true"
#        volumes:
#            - "gogs-data:/data"
#        depends_on:
#            - gogsdb
    redis:
        image: redis:latest
        container_name: redis
        hostname: redis
        restart: unless-stopped
        stdin_open: true
        tty: true
        ports:
            - "6379:6379"
        command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
        volumes:
            - redis_data:/data
    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        hostname: rabbitmq
        restart: unless-stopped
        stdin_open: true
        tty: true
        ports:
            - "5672:5672"
            - "15672:15672"
volumes:
    redis_data:
        driver: local
#    gogsdb-data:
#        driver: local
#    gogs-data:
#        driver: local
    postgreskc_data:
        driver: local
